<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="messenger">
	<select id="findChatIdByEmail" resultType="string">
		SELECT CHATID FROM CHATROOM 
		WHERE STATUS = 'Y'
			AND email = #{email}
	</select>
	
	<insert id="insertChatRoom">
		INSERT INTO CHATROOM (CHATID, email)
		VALUES(#{chatId}, #{email})
	</insert>
	
	<select id="findChatListByChatId" resultType="msg">
		select * 
		from chatlog
		where chatid = #{chatId}
		order by chatno
	</select>
	
	<select id="findRecentList" resultType="map">
		select *
		from (
		    select chatno,
		           A.chatid, 
		           (select email from chatroom where chatid = #{chatId} and email!=#{email}) email, 
		           msg, 
		           time,
		           count(*) over(partition by A.chatid,A.email) cnt,
		           rank() over(partition by A.chatid order by time desc) rank 
		    from chatlog A left join chatroom B
		        on A.chatid = B.chatid and A.email = B.email
		    where time > (select lastcheck from chatroom C where C.chatid = A.chatid and email = #{email}) 
		    order by time desc)A
		where rank = 1
		union all 
		select *
		from (
		    select chatno,
		           A.chatid, 
		           (select email from chatroom where chatid = #{chatId} and email!=#{email}) email, 
		           msg, 
		           time,
		           0 cnt,
		           rank() over(partition by A.chatid order by time desc) rank 
		    from chatlog A left join chatroom B
			        on A.chatid = B.chatid and A.email = B.email where A.email=#{email}
			order by time desc)A
		where rank = 1 and time <![CDATA[ <= ]]> (select lastcheck from chatroom C where C.chatid = A.chatid and email = #{email}) 
	</select>
	
	<update id="updateLastCheck">
		UPDATE CHATROOM SET LASTCHECK =  #{time}
		WHERE CHATID = #{chatId} AND email = #{email}
	</update>
	
	<insert id="insertChatLog">
		INSERT INTO CHATLOG (CHATNO, CHATID, EMAIL, MSG, TIME)
		VALUES(SEQ_CHATNO.NEXTVAL, #{chatId}, #{email}, #{msg}, #{time})
	</insert>
	<update id="deleteChatRoom">
		UPDATE CHATROOM SET STATUS = 'N', ENDDATE=SYSDATE
		WHERE CHATID = #{chatId}
	</update>
	
	<select id="selectMemberList" resultType="map">
		select E.emp_id as "emp_id",E.emp_name as "emp_name" ,d.dept_title as "dept_title",J.job_name as "job_name" ,C.chatid as "chat_id"
		, E.email as "email" from employee E 
		left join department D on E.dept_code = D.dept_id 
		left join job J on E.job_code=J.job_code 
		left join chatroom C on E.email=C.email
		order by E.emp_id
	</select>
	
	<select id="selectAllCountByAccountNo" resultType="_int">
		select count(*) from employee
	</select>
	
	<select id="findChatIdList" resultType="map">
		select * from chatroom where email=#{email}
	</select>
	
	
</mapper>